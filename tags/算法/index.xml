<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on eago</title>
    <link>https://eagowang.github.io/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on eago</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 05 Jul 2019 10:59:47 +0800</lastBuildDate>
    
	<atom:link href="https://eagowang.github.io/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[算法]二分查找</title>
      <link>https://eagowang.github.io/post/%E7%AE%97%E6%B3%95%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link>
      <pubDate>Fri, 05 Jul 2019 10:59:47 +0800</pubDate>
      
      <guid>https://eagowang.github.io/post/%E7%AE%97%E6%B3%95%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid>
      <description>定义 二分查找（二分搜索或折半搜索）是一种在有序数组中查找某一特定元素的搜索算法。 搜索过程从中间开始，如果中间元素正好是要查找的元素，则搜索过</description>
    </item>
    
    <item>
      <title>[算法]排序</title>
      <link>https://eagowang.github.io/post/%E7%AE%97%E6%B3%95%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Tue, 18 Jun 2019 17:48:36 +0800</pubDate>
      
      <guid>https://eagowang.github.io/post/%E7%AE%97%E6%B3%95%E6%8E%92%E5%BA%8F/</guid>
      <description>公用的数据 1 var nums = [4, 2, 16, 12, 32, 21, 33, 1]; array.sort 1 2 3 4 5 6 7 8 9 nums.sort(function(a, b) { if (a &amp;lt; b) { return -1; } if (a &amp;gt; b) { return 1; } return 0; }); 冒泡排序 依次交换相邻的两个数字的顺序（大的</description>
    </item>
    
    <item>
      <title>[算法]二叉查找树</title>
      <link>https://eagowang.github.io/post/%E7%AE%97%E6%B3%95%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91/</link>
      <pubDate>Tue, 04 Jun 2019 21:46:55 +0800</pubDate>
      
      <guid>https://eagowang.github.io/post/%E7%AE%97%E6%B3%95%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91/</guid>
      <description>二叉查找树（Binary Search Tree，BST），也叫二叉搜索树，排序二叉树，指一棵空树或具有下列性质的二叉树： 若任意节点的左子树不为空，则左子</description>
    </item>
    
  </channel>
</rss>